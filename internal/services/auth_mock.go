// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/services/interfaces.go

// Package mock_services is a generated GoMock package.
package services

import (
	context "context"
	core "gokeeper/internal/core"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserRepo is a mock of UserRepo interface.
type MockUserRepo struct {
	ctrl     *gomock.Controller
	recorder *MockUserRepoMockRecorder
}

// MockUserRepoMockRecorder is the mock recorder for MockUserRepo.
type MockUserRepoMockRecorder struct {
	mock *MockUserRepo
}

// NewMockUserRepo creates a new mock instance.
func NewMockUserRepo(ctrl *gomock.Controller) *MockUserRepo {
	mock := &MockUserRepo{ctrl: ctrl}
	mock.recorder = &MockUserRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRepo) EXPECT() *MockUserRepoMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUserRepo) Create(ctx context.Context, user *core.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUserRepoMockRecorder) Create(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUserRepo)(nil).Create), ctx, user)
}

// GetByLogin mocks base method.
func (m *MockUserRepo) GetByLogin(ctx context.Context, login string) (*core.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByLogin", ctx, login)
	ret0, _ := ret[0].(*core.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByLogin indicates an expected call of GetByLogin.
func (mr *MockUserRepoMockRecorder) GetByLogin(ctx, login interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByLogin", reflect.TypeOf((*MockUserRepo)(nil).GetByLogin), ctx, login)
}

// MockKeyService is a mock of KeyService interface.
type MockKeyService struct {
	ctrl     *gomock.Controller
	recorder *MockKeyServiceMockRecorder
}

// MockKeyServiceMockRecorder is the mock recorder for MockKeyService.
type MockKeyServiceMockRecorder struct {
	mock *MockKeyService
}

// NewMockKeyService creates a new mock instance.
func NewMockKeyService(ctrl *gomock.Controller) *MockKeyService {
	mock := &MockKeyService{ctrl: ctrl}
	mock.recorder = &MockKeyServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyService) EXPECT() *MockKeyServiceMockRecorder {
	return m.recorder
}

// GenerateKeys mocks base method.
func (m *MockKeyService) GenerateKeys() (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateKeys")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GenerateKeys indicates an expected call of GenerateKeys.
func (mr *MockKeyServiceMockRecorder) GenerateKeys() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateKeys", reflect.TypeOf((*MockKeyService)(nil).GenerateKeys))
}
