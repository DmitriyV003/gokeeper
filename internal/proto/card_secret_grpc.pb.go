// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: internal/proto/card_secret.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CardSecretServiceClient is the client API for CardSecretService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CardSecretServiceClient interface {
	CreateCardSecret(ctx context.Context, in *CreateCardSecretRequest, opts ...grpc.CallOption) (*SecretCardResponse, error)
	UpdateCardSecret(ctx context.Context, in *UpdateCardSecretRequest, opts ...grpc.CallOption) (*SecretCardResponse, error)
	DeleteCardSecret(ctx context.Context, in *DeleteCardSecretRequest, opts ...grpc.CallOption) (*SecretCardResponse, error)
}

type cardSecretServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCardSecretServiceClient(cc grpc.ClientConnInterface) CardSecretServiceClient {
	return &cardSecretServiceClient{cc}
}

func (c *cardSecretServiceClient) CreateCardSecret(ctx context.Context, in *CreateCardSecretRequest, opts ...grpc.CallOption) (*SecretCardResponse, error) {
	out := new(SecretCardResponse)
	err := c.cc.Invoke(ctx, "/proto.CardSecretService/CreateCardSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardSecretServiceClient) UpdateCardSecret(ctx context.Context, in *UpdateCardSecretRequest, opts ...grpc.CallOption) (*SecretCardResponse, error) {
	out := new(SecretCardResponse)
	err := c.cc.Invoke(ctx, "/proto.CardSecretService/UpdateCardSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cardSecretServiceClient) DeleteCardSecret(ctx context.Context, in *DeleteCardSecretRequest, opts ...grpc.CallOption) (*SecretCardResponse, error) {
	out := new(SecretCardResponse)
	err := c.cc.Invoke(ctx, "/proto.CardSecretService/DeleteCardSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CardSecretServiceServer is the server API for CardSecretService service.
// All implementations must embed UnimplementedCardSecretServiceServer
// for forward compatibility
type CardSecretServiceServer interface {
	CreateCardSecret(context.Context, *CreateCardSecretRequest) (*SecretCardResponse, error)
	UpdateCardSecret(context.Context, *UpdateCardSecretRequest) (*SecretCardResponse, error)
	DeleteCardSecret(context.Context, *DeleteCardSecretRequest) (*SecretCardResponse, error)
	mustEmbedUnimplementedCardSecretServiceServer()
}

// UnimplementedCardSecretServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCardSecretServiceServer struct {
}

func (UnimplementedCardSecretServiceServer) CreateCardSecret(context.Context, *CreateCardSecretRequest) (*SecretCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCardSecret not implemented")
}
func (UnimplementedCardSecretServiceServer) UpdateCardSecret(context.Context, *UpdateCardSecretRequest) (*SecretCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCardSecret not implemented")
}
func (UnimplementedCardSecretServiceServer) DeleteCardSecret(context.Context, *DeleteCardSecretRequest) (*SecretCardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCardSecret not implemented")
}
func (UnimplementedCardSecretServiceServer) mustEmbedUnimplementedCardSecretServiceServer() {}

// UnsafeCardSecretServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CardSecretServiceServer will
// result in compilation errors.
type UnsafeCardSecretServiceServer interface {
	mustEmbedUnimplementedCardSecretServiceServer()
}

func RegisterCardSecretServiceServer(s grpc.ServiceRegistrar, srv CardSecretServiceServer) {
	s.RegisterService(&CardSecretService_ServiceDesc, srv)
}

func _CardSecretService_CreateCardSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCardSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardSecretServiceServer).CreateCardSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CardSecretService/CreateCardSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardSecretServiceServer).CreateCardSecret(ctx, req.(*CreateCardSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardSecretService_UpdateCardSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCardSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardSecretServiceServer).UpdateCardSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CardSecretService/UpdateCardSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardSecretServiceServer).UpdateCardSecret(ctx, req.(*UpdateCardSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CardSecretService_DeleteCardSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCardSecretRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CardSecretServiceServer).DeleteCardSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CardSecretService/DeleteCardSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CardSecretServiceServer).DeleteCardSecret(ctx, req.(*DeleteCardSecretRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CardSecretService_ServiceDesc is the grpc.ServiceDesc for CardSecretService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CardSecretService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CardSecretService",
	HandlerType: (*CardSecretServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCardSecret",
			Handler:    _CardSecretService_CreateCardSecret_Handler,
		},
		{
			MethodName: "UpdateCardSecret",
			Handler:    _CardSecretService_UpdateCardSecret_Handler,
		},
		{
			MethodName: "DeleteCardSecret",
			Handler:    _CardSecretService_DeleteCardSecret_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/proto/card_secret.proto",
}
